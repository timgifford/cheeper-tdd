Refactor This - Cmd + Alt + Shift + T

1. Send Cheep saves to repository
    Refactor out repository
    Extract interface
    Inject Repository from test
    Assert against repository

2. Cheep too long
    Where to put logic?

3. Send emails to mentioned users
    Implement in unit test - refactor to class

    ==========

    assertThat(notifier.sendMentionedNotificationsWasCalled(), is(true));

    ==========
    Extract Interface
    Inject to class

4. Test EmailNotifier
    Implement class from interface
    Create test file (Cmd + Shift + T)

==========

public class EmailNotifierTest {

    private TestableSmtp mockSmtpEmailer = new TestableSmtp();
    private EmailNotifier emailSender;
    private CheepUserRepositoryInMemory cheepUserRepository;

    @Before
    public void setUp() throws Exception {
        cheepUserRepository = new CheepUserRepositoryInMemory();
        cheepUserRepository.save(TestObjectFactory.Users.Tim());

        emailSender = new EmailNotifier(mockSmtpEmailer, cheepUserRepository);
    }

    @Test
    public void sendEmailsToMentionedUsersNeedsToGetUsersEmail() {
        emailSender.sendEmailsToMentionedUsers("@timgifford is mentioned");

        mockSmtpEmailer.assertContainsRecipient("tim@leantechniques.co");
    }
}